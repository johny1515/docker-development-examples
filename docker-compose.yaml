version: "3.0"
services: 
    csharp: #docker run -it -v ${PWD}:/work -w /work -p 5000:5000 aimvector/csharp:1.0.0 /bin/sh
        container_name: csharp
        image: jwas91/csharp:1.0.0
        build:
            context: ./c#
            target: debug
        volumes:
        - ./c#/src/:/work/
        ports:
        - 5000:5000
    golang: # docker run -it -v ${PWD}/src:/go/src/work/ -v ${PWD}/configs:/configs -w /go/src/work/ -p 5001:5000 jwas91/golang:1.0.0 /bin/sh
        container_name: golang
        image: jwas91/golang:1.0.0
        build: 
            context: ./golang
            target: debug
        working_dir: /go/src/work   #comment out for build.target:prod
        entrypoint: /bin/sh         #comment out for build.target:prod
        stdin_open: true            #comment out for build.target:prod
        tty: true                   #comment out for build.target:prod
        entrypoint: ./app           #comment out for build.target:prod
        volumes: 
        -  ./golang/src/:/go/src/work/
        -  ./golang/configs/:/configs/
        ports: 
        -  5001:5000
    nodejs: # docker run -it -v ${PWD}:/work -w /work -p 5002:5000 jwas91/nodejs:1.0.0 /bin/sh
        container_name: nodejs
        image: jwas91/nodejs:1.0.0
        build: 
            context: ./nodejs
            target: debug
        volumes: 
        -  ./nodejs/src/:/work
        ports: 
        -  5002:5000
    python: # docker run -it -v ${PWD}:/work -w /work -p 5003:5000 jwas91/python:1.0.0 /bin/sh
        container_name: python
        image: jwas91/python:1.0.0
        build: 
            context: ./python
            target: debug
        volumes: 
        -  ./python/src/:/work
        ports: 
        -  5003:5000
