version: "3"
services: 
    csharp: # docker run -it -v ${PWD}:/work -w /work -p 5000:5000 jwas91/csharp:1.0.0 /bin/sh
        container_name: csharp 
        # docker exec -it csharp sh
        image: jwas91/csharp:1.0.0
        build: 
            context: ./csharp
            target: debug
        working_dir: /work      # command out for build.target.prod
        entrypoint: /bin/sh     # command out for build.target.prod
        stdin_open: true        # command out for build.target.prod
        tty: true               # command out for build.target.prod
        volumes: 
        -  ./csharp/src/:/work
        ports: 
        -  5000:5000
    golang: # docker run -it -v ${PWD}:/work -w /work -p 5001:5000 jwas91/golang:1.0.0 /bin/sh
        container_name: golang
        image: jwas91/golang:1.0.0
        build: 
            context: ./golang
            target: debug
        working_dir: /work      # command out for build.target.prod
        entrypoint: /bin/sh     # command out for build.target.prod
        stdin_open: true        # command out for build.target.prod
        tty: true               # command out for build.target.prod
        volumes: 
        -  ./golang/src/:/work
        ports: 
        -  5001:5000
    nodejs: # docker run -it -v ${PWD}:/work -w /work -p 5002:5000 jwas91/nodejs:1.0.0 /bin/sh
        container_name: nodejs
        image: jwas91/nodejs:1.0.0
        build: 
            context: ./nodejs
            target: debug
        working_dir: /work      # command out for build.target.prod
        entrypoint: /bin/sh     # command out for build.target.prod
        stdin_open: true        # command out for build.target.prod
        tty: true               # command out for build.target.prod
        volumes: 
        -  ./nodejs/src/:/work
        ports: 
        -  5002:5000
    python: # docker run -it -v ${PWD}:/work -w /work -p 5003:5000 jwas91/python:1.0.0 /bin/sh
        container_name: python
        image: jwas91/python:1.0.0
        build: 
            context: ./python
            target: debug
        working_dir: /work      # command out for build.target.prod
        entrypoint: /bin/sh     # command out for build.target.prod
        stdin_open: true        # command out for build.target.prod
        tty: true               # command out for build.target.prod
        volumes: 
        -  ./python/src/:/work
        ports: 
        -  5003:5000
